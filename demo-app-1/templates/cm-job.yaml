apiVersion: v1
kind: ConfigMap
metadata:
  name: crd-deletion-script
  namespace: acs-setup
data:
  script.sh: |
    #!/bin/bash
    set -euo pipefail
    echo "$ARGOCD_APP_REVISION new chart version set"
    CURRENT_TAG="$ARGOCD_APP_REVISION"
    for crd in $(oc get crds -l app.kubernetes.io/managed-by=$ARGOCD_APP_NAME -o jsonpath='{.items[*].metadata.name}'); do
      crd_tag=$(oc get crd "$crd" -o jsonpath='{.metadata.labels.argocd-app-revision}')
      echo "Found CRD $crd with revision label $crd_tag"
      if [[ -z "$crd_tag" ]]; then
        echo "CRD $crd is missing 'argocd-app-revision' label. Failing..."
        exit 1
      fi
      if [[ "$crd_tag" != "$CURRENT_TAG" ]]; then
        # check if CRs exist, enter delete only if no CRs exist
        output=$(oc get "$crd" -A 2>&1)
        if [[ "$output" == "No resources found" && $? -eq 0 ]]; then
          echo "Marking CRD $crd for deletion"
          # oc label crd "$crd" stale="true" stale-marked-at="$(date -u +%Y-%m-%dT%H-%M-%SZ)" --overwrite
          # oc delete crd "$crd"
          echo "CRD $crd deleted"
        else
          echo "CRD $crd still has CRs or some other error occured, failing..."
          echo "Output: $output"
          # oc label crd "$crd" orphaned="true" orphaned-marked-at="$(date -u +%Y-%m-%dT%H-%M-%SZ)" --overwrite
          exit 1
        fi
      fi
    done