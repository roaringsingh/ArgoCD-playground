apiVersion: batch/v1
kind: Job
metadata:
  name: crd-deletion 
  namespace: default
  annotations:
    argocd.argoproj.io/hook: PostSync
    # argocd.argoproj.io/hook-delete-policy: BeforeHookCreation  
spec:
  template:
    spec:
      serviceAccountName: delete-sa
      containers:
      - name: update-pull-secret
        image: repository.adp.amadeus.net/acs-sre-docker-production-mtpaas-nce-remote/acs_sre_images/ubi9-oc414-minimal:master-20250415_152547-79748ed
        command: ["/bin/sh", "-c"]
        env:
          - name: ARGOCD_APP_NAME
            value: {{.Values.ArgoCDAppName}}
          - name: ARGOCD_APP_REVISION
            value: {{.Values.gitRevision}}
        args:
          - |
            #!/bin/bash
            set -euo pipefail
            echo "$ARGOCD_APP_REVISION new tag set"
            CURRENT_TAG="$ARGOCD_APP_REVISION"
            STALE_CRDS=()
            for crd in $(oc get crds -l app.kubernetes.io/managed-by=$ARGOCD_APP_NAME -o jsonpath='{.items[*].metadata.name}'); do
              crd_tag=$(oc get crd "$crd" -o jsonpath='{.metadata.labels.git-revision}')
              echo "Found CRD $crd with tag $crd_tag"
              if [[ "$crd_tag" != "$CURRENT_TAG" ]]; then
                # check if CRs exist
                if ! oc get "$crd" 2>/dev/null | grep -q .; then
                  echo "Marking CRD $crd for deletion"
                  STALE_CRDS+=("$crd")
                else
                  echo "⚠️ CRD $crd still has CRs, skipping"
                fi
              fi
            done
            for crd in "${STALE_CRDS[@]}"; do
              oc delete crd "$crd"
            done
      restartPolicy: Never